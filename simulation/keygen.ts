import * as fs from "fs";


const mif = [
    "11111111",
    "00100001",
    "11111111",
    "00011100",
    "00011010",
    "00011000",
    "00011001",
    "11111111",
    "11111111",
    "00100000",
    "00100010",
    "00100100",
    "00011011",
    "01011000",
    "10001000",
    "11111111",
    "11111111",
    "01111001",
    "11000000",
    "11111111",
    "11111001",
    "11010000",
    "11011000",
    "11111111",
    "11111111",
    "11111111",
    "11000001",
    "11001001",
    "11001000",
    "11010001",
    "11011001",
    "01110000",
    "11111111",
    "11000011",
    "11000010",
    "11001010",
    "11010010",
    "11011011",
    "11011010",
    "10110000",
    "11111111",
    "11111000",
    "11000100",
    "11001011",
    "11010100",
    "11010011",
    "11011100",
    "10111000",
    "11111111",
    "11111011",
    "11111100",
    "11110100",
    "11001100",
    "11101100",
    "11100100",
    "11111111",
    "11111111",
    "11111111",
    "11111010",
    "11110011",
    "11101011",
    "11100011",
    "11100010",
    "11111111",
    "11111111",
    "10111011",
    "11110010",
    "11101010",
    "11101001",
    "11100000",
    "11100001",
    "11111111",
    "11111111",
    "10111010",
    "10000100",
    "11110001",
    "10101001",
    "11101000",
    "10110011",
    "11111111",
    "11111111",
    "11111111",
    "10101000",
    "11111111",
    "10101100",
    "10110001",
    "11111111",
    "11111111",
    "01011001",
    "11000000",
    "11110000",
    "10101011",
    "11111111",
    "10001010",
    "11111111",
    "11111111",
    "11111111",
    "11111111",
    "11111111",
    "11111111",
    "11111111",
    "11111111",
    "01100000",
    "11111111",
    "11111111",
    "10010010",
    "11111111",
    "01011100",
    "10010000",
    "11111111",
    "11111111",
    "11111111",
    "10010001",
    "01100001",
    "01100100",
    "10101010",
    "01100010",
    "01100011",
    "01111000",
    "00111111",
    "11111111",
    "10110010",
    "01011011",
    "10110011",
    "10111100",
    "01011010",
    "00000000",
    "11111111",
    "11111111",
    "11111111",
    "11111111",
    "00100011"];

const ps2 = [
    "..",
    "F9",
    "..",
    "F5",
    "F3",
    "F1",
    "F2",
    "F12",
    "..",
    "F10",
    "F8",
    "F6",
    "F4",
    "Tab",
    "~`",
    "..",
    "..",
    "Alt",
    "Left Shift",
    "..",
    "Ctrl",
    "Q",
    "1",
    "..",
    "..",
    "..",
    "Z",
    "S",
    "A",
    "W",
    "2",
    "left WIN",
    "..",
    "C",
    "X",
    "D",
    "E",
    "4",
    "3",
    "Right WIN",
    "..",
    "' '",
    "V",
    "F",
    "T",
    "R",
    "5",
    "Right Mouse",
    "..",
    "N",
    "B",
    "H",
    "G",
    "Y",
    "6",
    "..",
    "..",
    "..",
    "M",
    "J",
    "U",
    "7",
    "8",
    "..",
    "..",
    "','",
    "K",
    "I",
    "O",
    "0",
    "9",
    "..",
    "..",
    "'.'",
    "'/'",
    "L",
    "';'",
    "P",
    "'-'",
    "..",
    "..",
    "..",
    "'",
    "..",
    "'['",
    "'='",
    "..",
    "..",
    "Caps Lock",
    "Right SHIFT",
    "ENTER",
    "']'",
    "..",
    "'\'",
    "..",
    "..",
    "..",
    "..",
    "..",
    "..",
    "..",
    "..",
    "Back",
    "..",
    "..",
    "End",
    "..",
    "<-",
    "Home",
    "..",
    "..",
    "..",
    "ins",
    "DEL",
    "Dn",
    "Grey 5",
    "->",
    "Up",
    "ESC",
    "Num",
    "F11",
    "Grey +",
    "PDn",
    "Grey -",
    "Grey *",
    "PUp",
    "Scrol Lock",
    "..",
    "..",
    "..",
    "..",
    "F7",
];

const zxmatrix = [
    ["CS", "Z", "X", "C", "V"],
    ["A", "S", "D", "F", "G"],
    ["Q", "W", "E", "R", "T"],
    ["1", "2", "3", "4", "5"],
    ["0", "9", "8", "7", "6"],
    ["P", "O", "I", "U", "Y"],
    ["ENTER", "L", "K", "J", "H"],
    ["SPACE", "SS", "M", "N", "B"],

]

let matrix = new Array<any>(8);

for (let row = 0; row < 8; row++) {
    var rowVal = new Array<any>(6);

    for (let col = 0; col < 6; col++) {
        var colVal = new Array<string>();

        colVal.push(row.toString());
        colVal.push(col.toString());

        rowVal[col] = colVal;
    }

    matrix[row] = rowVal;
}

for (let index = 0; index < ps2.length; index++) {
    const key = ps2[index];
    const code = parseInt(mif[index], 2) as number;

    if (code == 0xff) continue;

    const row: number = (code >> 3) & 7;
    const col: number = (code & 7);

    if (col == 7) continue;

    let shift = ""

    switch ((code >> 6) & 3) {
        case 0: shift = "FS"; break;
        case 1: shift = "CS"; break;
        case 2: shift = "SS"; break;
    }

    //console.log(`${index}: ${key} : ${code.toString(2)} : row:${row} col:${col} shift: ${shift}`);
    //console.log(matrix[row][col]);

    if (shift != "") {
        matrix[row][col].push(key + " => " + zxmatrix[row][col] + "+" + shift);
        console.log(key + " => " + zxmatrix[row][col] + "+" + shift);
    }
    else {
        matrix[row][col].push(key + " => " + zxmatrix[row][col]);
        console.log(key + " => " + zxmatrix[row][col]);
    }
}

//console.log(matrix);
